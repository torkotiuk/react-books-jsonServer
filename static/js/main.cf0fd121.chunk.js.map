{"version":3,"sources":["pages/HomeView.jsx","components/AuthorBooks/AuthorBooks.jsx","pages/AuthorsView.jsx","pages/BooksView.jsx","pages/BookDetailsView.jsx","pages/NotFound.jsx","App.js","index.js"],"names":["HomeView","AuthorBooks","books","map","book","to","id","title","AuthorsView","state","authors","a","axios","get","response","this","setState","data","author","props","match","url","name","path","render","bookId","Number","params","authorId","find","Component","BooksView","matchUrl","BookDetailsView","descr","genre","imgUrl","src","alt","NotFound","App","exact","className","activeClassName","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0fd121.chunk.js","sourcesContent":["const HomeView = () => {\r\n  return <div>Homepage</div>;\r\n};\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthorBooks = ({ books }) => {\r\n  return (\r\n    <div>\r\n      <h2>Author books component</h2>\r\n      <ul>\r\n        {books.map(book => (\r\n          <li key={book.id}>\r\n            <Link to={`/books/${book.id}`}> {book.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default AuthorBooks;\r\n\r\n// v. 1 - list of author books by clicking on an author\r\n// import React from 'react';\r\n// const AuthorBooks = ({ books }) => {\r\n//   return (\r\n//     <div>\r\n//       <h2>Author books component</h2>\r\n//       <ul>\r\n//         {books.map(book => (\r\n//           <li key={book.id}>{book.title}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default AuthorBooks;\r\n\r\n// v. 0 --- all authors\r\n// import React, { Component } from 'react';\r\n// class AuthorBooks extends Component {\r\n//   state = {\r\n//     books: [],\r\n//   };\r\n//   componentDidMount() {\r\n//     const id = Number(this.props.match.params.authorId);\r\n//     const author = this.props.authors.find(author => author.id === id);\r\n//     this.setState({ books: author.books });\r\n//   }\r\n//   componentDidUpdate() {}\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h2>Author books component</h2>\r\n//         <ul>\r\n//           {this.state.books.map(book => (\r\n//             <li key={book.id}>{book.title}</li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default AuthorBooks;\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport AuthorBooks from '../components/AuthorBooks';\r\n\r\nclass AuthorsView extends Component {\r\n  state = {\r\n    authors: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\r\n      'http://localhost:3000/authors?_embed=books',\r\n    );\r\n\r\n    this.setState({ authors: response.data });\r\n  }\r\n  render() {\r\n    const { authors } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>This is authors</h1>\r\n        <ul>\r\n          {authors.map(author => (\r\n            <li key={author.id}>\r\n              <NavLink to={`${this.props.match.url}/${author.id}`}>\r\n                {author.name}\r\n              </NavLink>\r\n              {/* <NavLink to=\"/authors/:authorId\">{author.name}</NavLink> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        {/* <Route\r\n          // path=\"/authors/:authorId\"\r\n          // render={() => <h1>Books of current author</h1>}\r\n          // or\r\n          // path={`${this.props.match.path}/:authorId`}\r\n          // component={AuthorBooks} // possibly do one more fetch in AuthorBooks comp.\r\n          // or // v. 0 --- all authors >>> in AuthorBooks.jsx\r\n          // path={`${this.props.match.path}/:authorId`}\r\n          // render={props => {\r\n          //   return <AuthorBooks {...props} authors={this.state.authors} />;\r\n          // }}\r\n        /> */}\r\n\r\n        <Route\r\n          path={`${this.props.match.path}/:authorId`}\r\n          render={props => {\r\n            const bookId = Number(props.match.params.authorId);\r\n\r\n            const author = this.state.authors.find(\r\n              author => author.id === bookId,\r\n            );\r\n\r\n            return author ? (\r\n              <AuthorBooks {...props} books={author.books} />\r\n            ) : null;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthorsView;\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BooksView extends Component {\r\n  state = {\r\n    books: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get('http://localhost:3000/books');\r\n\r\n    this.setState({ books: response.data });\r\n  }\r\n  render() {\r\n    const { books } = this.state;\r\n    // console.log(this.props);\r\n    // console.log(this.props.match.url); //using for navigation, how current rout match pathname\r\n    const matchUrl = this.props.match.url;\r\n    return (\r\n      <div>\r\n        <h1>This is books</h1>\r\n        <ul>\r\n          {books.map(book => (\r\n            <li key={book.id}>\r\n              {/* <Link to={`/books/${book.id}`}>{book.title}</Link> */}\r\n              <Link to={`${matchUrl}/${book.id}`}>{book.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksView;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass BookDetailsView extends Component {\r\n  state = {\r\n    descr: null,\r\n    genre: null,\r\n    id: null,\r\n    imgUrl: null,\r\n    title: null,\r\n    author: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { bookId } = this.props.match.params;\r\n    const response = await axios(\r\n      `http://localhost:3000/books/${bookId}?_expand=author`,\r\n    );\r\n\r\n    // this.setState({ book: response.data }); // we have {book} in the state\r\n    this.setState({ ...response.data }); // we spread all information to the state\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is a one book page </h1>\r\n        <p>\r\n          <strong>Book {this.props.match.params.bookId}</strong>\r\n        </p>\r\n        <img src={this.state.imgUrl} alt=\"\" />\r\n        <h2>{this.state.title}</h2>\r\n        {this.state.author && <p>Author: {this.state.author.name}</p>}\r\n        <p>Genre: {this.state.genre}</p>\r\n        <p>{this.state.descr}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookDetailsView;\r\n","const NotFound = () => {\r\n  return <div>404 - page not found</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { Route, NavLink, Switch } from 'react-router-dom';\nimport HomeView from './pages/HomeView';\nimport AuthorsView from './pages/AuthorsView';\nimport BooksView from './pages/BooksView';\nimport BookDetailsView from './pages/BookDetailsView';\nimport NotFound from './pages/NotFound';\n\nconst App = () => {\n  return (\n    <>\n      <ul>\n        <li>\n          <NavLink\n            exact\n            to=\"/\"\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/authors\"\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Authors\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/books\"\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Books\n          </NavLink>\n        </li>\n      </ul>\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/authors\" component={AuthorsView} />\n        <Route path=\"/books/:bookId\" component={BookDetailsView} />\n        <Route path=\"/books\" component={BooksView} />\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}